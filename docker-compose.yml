version: '3.1'
services:
  db:
    image: mysql:8.0.17 
    environment:
      MYSQL_DATABASE: ${PROJ_NAME}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PWD}
    ports:
      - "3306:3306"
    networks:
      - common
    volumes:
      - sql_scripts_storage:/docker-entrypoint-initdb.d
  minio:
    image: minio/minio
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${AWS_ACCESS_KEY_ID}
      MINIO_ROOT_PASSWORD: ${AWS_SECRET_ACCESS_KEY}
    command: server --console-address ":9001" /data
    networks:
      - common
    volumes:
      - minio_storage:/data
  mc:
    image: minio/mc
    restart: on-failure
    environment:
      BUCKET: ${PROJ_NAME}
      AWS_ID: ${AWS_ACCESS_KEY_ID}
      AWS_PWD: ${AWS_SECRET_ACCESS_KEY}
    entrypoint:
      - "/bin/sh"
      - "-c"
      - "/usr/bin/mc alias set myminio http://minio:9000 $${AWS_ID} $${AWS_PWD};
        /usr/bin/mc mb --ignore-existing myminio/$${BUCKET};
        /usr/bin/mc policy set public myminio/$${BUCKET};"
    networks:
      - common
    depends_on:
      - minio
  jupyter:
    image: jupyter/datascience-notebook:python-3.7
    user: root
    working_dir: "/home/ajkdrag"
    ports:
      - "8888:8888"
    environment:
      GRANT_SUDO: "yes"
      NB_USER: ajkdrag
      NB_UID: 1234
      NB_GID: 1234
      CHOWN_HOME: "yes"
      CHOWN_HOME_OPTS: "-R"
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION}
    networks:
      - common
    volumes:
      - notebook_storage:/home/ajkdrag/work
      - data_storage:/home/ajkdrag/data
networks:
  common:
    driver: bridge
volumes:
  minio_storage:
    driver_opts:
      type: none
      device: ${PWD}/volumes/minio
      o: bind
  notebook_storage:
    driver_opts:
      type: none
      device: ${PWD}/volumes/notebooks
      o: bind
  data_storage:
    driver_opts:
      type: none
      device: ${PWD}/data
      o: bind
  sql_scripts_storage:
    driver_opts:
      type: none
      device: ${PWD}/sql
      o: bind

